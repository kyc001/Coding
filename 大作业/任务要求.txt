任务要求：实现多项式有理式solver
**限制选择人数**：5人 

本solver需要实现判断多项式和有理式组成的等式是否成立
关于solver的功能介绍、输入输出示例、以及term的相关说明如下：

-------------------------------------------------
1.多项式solver: 判断多项式等式是否成立

示例：
a+b+c = c+a+2*b-b 应该判断为相等
a*b*c + c*d = b*a*c + d*c 应该判断为相等
a^2 + (c^3)*d = d*(c^3)+a^2 应该判断为相等
a+b+10 = b+a+5应该判对为不相等
a+c = d 应该为无法判断

solver的返回值说明：
相等返回1，不相等返回0，无法判断返回-1

solver的函数接口如下：
int solver_poly(term* t);

-------------------------------------------------
2.有理式solver：判断有理式等式是否成立

solver的功能如下：
对于有理式 p1/p2 = p3/p4 ， p1 p2 p3 p4均为多项式，则等式成立当且仅当（p2不为0，p4不为0，p1*p4 = p3*p2）

solver的返回值说明：
相等返回1，不相等返回0，无法判断(包括分母为0)返回-1

solver的函数接口如下：
int solver_rational(term* t);

------------------------------------------------

关于非加减乘除符号构成的term的说明：
比如 sinx, 2^x, x^2, sqrt(x) ... 这样的term将其视为一个整体，不需要处理相关符号的运算化简
例如： 
(2*sinx + a^2)*(x^2) = 2*(x^2)*sinx + (a^2)*(x^2) 应该判断为相等
2*sinx * cosx = sin(2*x) 为无法判断
(a+b)^2 * (a+b) = a*(a+b)^2 + b*(a+b)^2 应该判断为相等
(a+b)^3 = a*(a+b)^2 + b*(a+b)^2 为无法判断

------------------------------------------------


关于term的详细定义，参考term的语法树说明文档

任务提示：
对于多项式而言，语法树的形式并不适合进行诸如合并同类项这样的操作，因此可以考虑设计一种新的结构体来表示多项式
比如由系数和项组成的pair的列表（用数组或链表实现）
然后将语法树转化为这样的结构，再进行多项式的化简，最后进行比较
(此提示仅供作为一种思路参考)

辅助函数说明：
提供了pattern match相关的函数进行模式匹配，关于pattern match的使用说明可以参考test_pm.c

项目编译说明：
在实现上述接口后，可以修改test.c，调用自己的接口进行测试，修改后执行如下指令进行编译：
gcc  -O3 -g  -fsanitize=address  -ftrapv ast.c hashtable.c pattern_match.c parser_api.c parser.c lexer.c test.c  -o test.out